exports.id=928,exports.ids=[928],exports.modules={6937:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,81170,23)),Promise.resolve().then(c.t.bind(c,23597,23)),Promise.resolve().then(c.t.bind(c,36893,23)),Promise.resolve().then(c.t.bind(c,89748,23)),Promise.resolve().then(c.t.bind(c,6060,23)),Promise.resolve().then(c.t.bind(c,7184,23)),Promise.resolve().then(c.t.bind(c,69576,23)),Promise.resolve().then(c.t.bind(c,73041,23)),Promise.resolve().then(c.t.bind(c,51384,23))},11799:(a,b,c)=>{"use strict";c.d(b,{A:()=>k,AuthProvider:()=>j});var d=c(21124),e=c(38301),f=c(13222),g=c(42378);let h="http://localhost:4000/api/v1",i=(0,e.createContext)(),j=({children:a})=>{let[b,c]=(0,e.useState)(null),[j,k]=(0,e.useState)(null),[l,m]=(0,e.useState)(!0),n=(0,g.useRouter)();(0,e.useEffect)(()=>{(()=>{try{let a=localStorage.getItem("token"),b=localStorage.getItem("user");a&&b&&(k(a),c(JSON.parse(b)),f.A.defaults.headers.common.Authorization=`Bearer ${a}`)}catch(a){console.error("Failed to load user data from localStorage:",a),localStorage.removeItem("token"),localStorage.removeItem("user")}finally{m(!1)}})()},[]);let o=async(a,b)=>{m(!0);try{let d=await f.A.post(`${h}/login`,{email:a,password:b}),{token:e,user:g}=d.data;return localStorage.setItem("token",e),localStorage.setItem("user",JSON.stringify(g)),k(e),c(g),f.A.defaults.headers.common.Authorization=`Bearer ${e}`,m(!1),n.push("/dashboard"),{success:!0,message:d.data.message}}catch(a){return m(!1),console.error("Login failed:",a.response?.data?.message||a.message),{success:!1,message:a.response?.data?.message||"Login failed"}}},p=async a=>{m(!0);try{let b=await f.A.post(`${h}/signup`,a);return m(!1),{success:!0,message:b.data.message}}catch(a){return m(!1),console.error("Signup failed:",a.response?.data?.message||a.message),{success:!1,message:a.response?.data?.message||"Signup failed"}}},q=async()=>{m(!0);try{return await f.A.get(`${h}/signout`),localStorage.removeItem("token"),localStorage.removeItem("user"),k(null),c(null),delete f.A.defaults.headers.common.Authorization,m(!1),n.push("/login"),{success:!0,message:"Logged out successfully"}}catch(a){return m(!1),console.error("Logout failed:",a.response?.data?.message||a.message),{success:!1,message:a.response?.data?.message||"Logout failed"}}};return(0,d.jsx)(i.Provider,{value:{user:b,token:j,loading:l,isAuthenticated:()=>!!j&&!!b,login:o,signup:p,logout:q,setUser:c},children:a})},k=()=>{let a=(0,e.useContext)(i);if(void 0===a)throw Error("useAuth must be used within an AuthProvider");return a}},14839:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,54160,23))},18589:(a,b,c)=>{Promise.resolve().then(c.bind(c,20439)),Promise.resolve().then(c.bind(c,66337)),Promise.resolve().then(c.bind(c,20335))},20335:(a,b,c)=>{"use strict";c.d(b,{ChatProvider:()=>e});var d=c(97954);let e=(0,d.registerClientReference)(function(){throw Error("Attempted to call ChatProvider() from the server but ChatProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\context\\ChatContext.js","ChatProvider");(0,d.registerClientReference)(function(){throw Error("Attempted to call useChat() from the server but useChat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\context\\ChatContext.js","useChat")},20439:(a,b,c)=>{"use strict";c.d(b,{SocketProvider:()=>e});var d=c(97954);let e=(0,d.registerClientReference)(function(){throw Error("Attempted to call SocketProvider() from the server but SocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\app\\components\\SocketProvider.js","SocketProvider");(0,d.registerClientReference)(function(){throw Error("Attempted to call useSocket() from the server but useSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\app\\components\\SocketProvider.js","useSocket")},39727:()=>{},43385:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,54160,23)),Promise.resolve().then(c.t.bind(c,31603,23)),Promise.resolve().then(c.t.bind(c,68495,23)),Promise.resolve().then(c.t.bind(c,75170,23)),Promise.resolve().then(c.t.bind(c,77526,23)),Promise.resolve().then(c.t.bind(c,78922,23)),Promise.resolve().then(c.t.bind(c,29234,23)),Promise.resolve().then(c.t.bind(c,12263,23)),Promise.resolve().then(c.bind(c,82146))},45173:(a,b,c)=>{"use strict";c.d(b,{ChatProvider:()=>j,Y:()=>k});var d=c(21124),e=c(38301),f=c(13222),g=c(11799);let h="http://localhost:4000/api/v1",i=(0,e.createContext)(),j=({children:a})=>{let{user:b,token:c}=(0,g.A)(),[j,k]=(0,e.useState)(null),[l,m]=(0,e.useState)([]),[n,o]=(0,e.useState)([]),[p,q]=(0,e.useState)([]),[r,s]=(0,e.useState)(!1),[t,u]=(0,e.useState)(!1),[v,w]=(0,e.useState)(!1),x=async()=>{if(c){s(!0);try{let a=await f.A.get(`${h}/getAll`);o(a.data.data),s(!1)}catch(a){s(!1),console.error("Error fetching all users:",a.response?.data?.message||a.message)}}},y=async()=>{if(c&&b?._id){s(!0);try{let a=await f.A.get(`${h}/user/${b._id}`);q(a.data.groups),s(!1)}catch(a){s(!1),console.error("Error fetching user groups:",a.response?.data?.message||a.message)}}},z=async a=>{if(!c||!a)return void m([]);u(!0);try{let b=await f.A.get(`${h}/chat/${a}`);m(b.data.data),u(!1)}catch(a){u(!1),console.error("Error fetching messages:",a.response?.data?.message||a.message),m([])}};(0,e.useEffect)(()=>{b&&c?(x(),y()):(o([]),q([]),k(null),m([]))},[b,c]),(0,e.useEffect)(()=>{j?z("group"===j.type?j._id:j.chatId):m([])},[j]);let A=async a=>{if(!a.trim()||!j||!b?._id||!c)return{success:!1,message:"Cannot send empty message or no chat selected."};let d=null,e=null,g=j.chatId;if("user"===j.type)d=j._id;else if("group"===j.type)e=j._id,g=j._id;else if("ai"===j.type)return{success:!1,message:"AI chat messages are handled via a different function."};try{let c={senderId:b._id,receiverId:d,groupId:e,content:a,chatId:g},i=await f.A.post(`${h}/sendMessage`,c);return m(c=>[...c,{_id:i.data.data._id,sender:{_id:b._id,username:b.username,profileImage:b.profileImage},receiver:d?{_id:d}:null,group:e,content:a,chatId:g,timestamp:new Date().toISOString()}]),{success:!0,message:i.data.message,data:i.data.data}}catch(a){return console.error("Error sending message:",a.response?.data?.message||a.message),{success:!1,message:a.response?.data?.message||"Failed to send message"}}};return(0,d.jsx)(i.Provider,{value:{selectedChat:j,setSelectedChat:k,messages:l,setMessages:m,allUsers:n,userGroups:p,loadingChats:r,loadingMessages:t,sendMessage:A,fetchMessages:z,fetchAllUsers:x,fetchUserGroups:y,isTyping:v,setIsTyping:w},children:a})},k=()=>{let a=(0,e.useContext)(i);if(void 0===a)throw Error("useChat must be used within a ChatProvider");return a}},46205:(a,b,c)=>{Promise.resolve().then(c.bind(c,62917)),Promise.resolve().then(c.bind(c,11799)),Promise.resolve().then(c.bind(c,45173))},47990:()=>{},54591:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,81170,23))},61135:()=>{},62917:(a,b,c)=>{"use strict";c.d(b,{SocketProvider:()=>j});var d=c(21124),e=c(38301),f=c(62502),g=c(11799),h=c(45173);let i=(0,e.createContext)(),j=({children:a})=>{let{user:b,isAuthenticated:c,token:j}=(0,g.A)(),{selectedChat:k,setMessages:l,setIsTyping:m}=(0,h.Y)(),n=(0,e.useRef)(null);(0,e.useEffect)(()=>(c()&&b?(n.current=(0,f.Ay)("http://localhost:4000",{query:{userId:b._id,token:j},transports:["websocket"]}),n.current.on("connect",()=>{if(console.log("Socket.IO connected:",n.current.id),k){let a="group"===k.type?k._id:k.chatId;n.current.emit("joinChat",a)}}),n.current.on("receiveMessage",a=>{console.log("Received message:",a),l(b=>[...b,a])}),n.current.on("typing",a=>{(k&&"group"===k.type&&k._id===a||"user"===k.type&&k.chatId===a)&&m(!0)}),n.current.on("stopTyping",a=>{(k&&"group"===k.type&&k._id===a||"user"===k.type&&k.chatId===a)&&m(!1)}),n.current.on("disconnect",()=>{console.log("Socket.IO disconnected")}),n.current.on("connect_error",a=>{console.error("Socket.IO connection error:",a.message)})):!c()&&n.current&&(n.current.disconnect(),n.current=null),()=>{n.current&&(n.current.disconnect(),n.current=null)}),[c,b,j,k]),(0,e.useEffect)(()=>{if(n.current&&k){let a="group"===k.type?k._id:k.chatId;n.current.emit("joinChat",a)}},[k]);let o={socket:n.current,emitEvent:(a,b)=>{n.current&&n.current.connected?n.current.emit(a,b):console.warn("Socket not connected. Cannot emit event:",a)}};return(0,d.jsx)(i.Provider,{value:o,children:a})}},66337:(a,b,c)=>{"use strict";c.d(b,{AuthProvider:()=>e});var d=c(97954);let e=(0,d.registerClientReference)(function(){throw Error("Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\context\\AuthContext.jsx","AuthProvider");(0,d.registerClientReference)(function(){throw Error("Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\mern-chat-app\\bondify-frontend\\src\\context\\AuthContext.jsx","useAuth")},70440:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>e});var d=c(97523);let e=async a=>[{type:"image/x-icon",sizes:"16x16",url:(0,d.fillMetadataSegment)(".",await a.params,"favicon.ico")+""}]},78335:()=>{},96487:()=>{},97634:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>k,metadata:()=>j});var d=c(75338),e=c(3399),f=c.n(e);c(61135);var g=c(66337),h=c(20439),i=c(20335);let j={title:"Bondify - Connect & Chat",description:"A modern chat application built with Next.js and MERN stack."};function k({children:a}){return(0,d.jsx)("html",{lang:"en",children:(0,d.jsxs)("body",{className:f().className,children:[(0,d.jsx)(g.AuthProvider,{children:(0,d.jsx)(i.ChatProvider,{children:(0,d.jsx)(h.SocketProvider,{children:a})})}),"      "]})})}}};